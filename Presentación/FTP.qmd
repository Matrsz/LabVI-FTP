---
title: "Protocolo FTP"
author: "Matías Roqueta"
format: 
  beamer:
    institute: "Ingeniería en Telecomunicaciones, Instituto Balseiro"
    theme: Hannover
    colortheme: seahorse
    fonttheme: structuresmallcapsserif
    code-overflow: wrap   
    linestretch: 2
---

## Objetivo

Diseñar arquitectura Cliente $\leftrightarrow$ Servidor 

```{julia}
#| echo: false
#| output: false

using Kroki 
using Base: Fix1, Fix2

Diagram(:svgbob, """
 Server                     Client  
+--------+                 +--------+
|    2021| <-------------> |        |
|        |  Command        |        |
|        |                 |        |
|    2022| <- - - - - - -> |        |
|        |  Data           |        |
+--------+                 +--------+
""") |> Fix2(render, "svg") |> Fix1(write, "Images/fig1.svg")
```

![](Images/fig1.svg){fig-align="center"}

- Puerto `2021`: Command channel, permanece abierto mientras la sesión esté activa
- Puerto `2022`: Data channel, abierto únicamente en respuesta a comandos que lo requieran

## Cliente $\rightarrow$ Servidor

:::: {.columns}

::: {.column width="50%"}

Comandos que usan solamente Command channel:

\vspace{1em}

- `USER <user>`
- `PASS <pass>`
- `CWD <dir>`
- `CDUP`
- `MKD <dir>`
- `RMD <dir>`
- `DELE <file>`
- `QUIT`

:::

::: {.column width="50%"}

Comandos que usan ambos Command y Data channel:

\vspace{1em}

- `LIST`
- `RETR <file>`
- `STOR <file>`


:::

::::


## Comando LIST

```{julia}
#| echo: false
#| output: false

Diagram(:seqdiag, """
{
  default_fontsize = 16
  node_height = 45
  node_width = 100
  default_node_color = none
  activation = none;
  edge_length = 500;
  default_note_color = white;
  Server [label="Server", fontsize=20]
  Client [label="Client", fontsize=20]
  Server <- Client [label="LIST"];
  Server -> Client [label="150: Opening data connection.", leftnote="Open Data\nChannel", rightnote="Open Data\nChannel"]
  Server --> Client [label="<directory listing>"]
  Server -> Client [label="226: File transfer successful.", leftnote="Close Data\nChannel", rightnote="Close Data\nChannel"]
}""") |> Fix2(render, "svg") |> Fix1(write, "Images/list.svg")
```

![](Images/list.svg){fig-align="center"}

## Comando RETR \<file\>

```{julia}
#| echo: false
#| output: false

Diagram(:seqdiag, """
{
  default_fontsize = 16
  node_height = 45
  node_width = 100
  default_node_color = none
  activation = none;
  edge_length = 500;
  default_note_color = white;
  Server [label="Server", fontsize=20]
  Client [label="Client", fontsize=20]
  Server <- Client [label="RETR <file>"];
  Server -> Client [label="150: Opening data connection.", leftnote="Open Data\nChannel", rightnote="Open Data\nChannel"]
  Server --> Client [label="<filesize>", rightnote="Initialize\nBuffer"]
  Server --> Client [label="<file contents>"]
  Server -> Client [label="226: File transfer successful.", leftnote="Close Data\nChannel", rightnote="Close Data\nChannel"]
}""") |> Fix2(render, "svg") |> Fix1(write, "Images/retr.svg")
```

![](Images/retr.svg){fig-align="center"}

## Comando STOR \<file\>

```{julia}
#| echo: false
#| output: false

Diagram(:seqdiag, """
{
  default_fontsize = 16
  node_height = 45
  node_width = 100
  default_node_color = none
  activation = none;
  edge_length = 500;
  default_note_color = white;
  Server [label="Server", fontsize=20]
  Client [label="Client", fontsize=20]
  Server <- Client [label="STOR <file>"];
  Server -> Client [label="150: Opening data connection.", leftnote="Open Data\nChannel", rightnote="Open Data\nChannel"]
  Server <-- Client [label="<filesize>", leftnote="Initialize\nBuffer"]
  Server <-- Client [label="<file contents>"]
  Server -> Client [label="226: File transfer successful.", leftnote="Close Data\nChannel", rightnote="Close Data\nChannel"]
}""") |> Fix2(render, "svg") |> Fix1(write, "Images/stor.svg")
```

![](Images/stor.svg){fig-align="center"}

